<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="akka" type="Akka.Configuration.Hocon.AkkaConfigurationSection, Akka" />
  </configSections>
  <appSettings file="Environment.config">
    <add key="Genesys.Client.ClientId" value="f246c18a-5527-49ef-beb8-994ae76e4f37" />
    <add key="Genesys.Client.Secret" value="zpDoeZwZlQt27tXpirBD5tze6fjxnAtTO0_p_oUNjNw" />
    <add key="Genesys.Code.ClientId" value="8f3ff16a-9662-4fd2-9b9d-c9aeec9cd9c7" />
    <add key="Genesys.Code.Secret" value="r--5Uk7N6PNGo_RGXhmLnwjM7GYNaKGIXBTuEEdwZIw" />
    <add key="Genesys.Organization" value="tranzactpoc" />
    <add key="Genesys.Region" value="us_west_2" />
    <add key="Genesys.TimeZone" value="Eastern Standard Time"/>
    <add key="Genesys.OutboundQueueId" value="e71e9f83-7f89-4054-a44a-a89c8800f003"/>
    <add key="Genesys.DialerLoginUrl" value="https://login.microsoftonline.com/dd5d5cfe-d892-4892-b623-1134653cc289/saml2?SAMLRequest=jZHLasMwEEV%2FJWjvh2Q5UYRtcF4QSKEkbRfdqfKkMdiSq5GSfn6dhKwKpZtZDHNn7rlToOq7QdbBn8wevgKgn3z3ncGSBGekVdiiNKoHlF7LQ%2F20kyxOZQ9eNcorMtmuSrIRfCWEqOtswfmSLgTn2Syv%2BVowmq7mazJ5A4etNSUZxaMGMcDWoFfGj62U0SjNo3T2wqhMc0mnMU35%2B3XuWSG2ZyjJUXUIZFIjgvPjpqU1GHpwB3DnVsPrfleSk%2FcDyiTp7Gdr4oAXFg%2FBQaw7G5rkCkrubPIG%2FTfh4Ky32o6SjXUabgE9bFTFjcD9Jyn1cEyqhz%2F0GF9a09gLxgZ80jR5k%2BsjRI2Ys4hfy8eUZRGlGZ%2FmmdZMzJMiud%2BsiuT3y6of"/>
    <add key="Genesys.DialerLoginCallbackUrl" value="http://localhost:60603/api/agentDialer/authenticateWithProvider"/>
    <add key="Genesys.ForciblyTerminatedWrapUpCodeId" value="8fd25713-28f0-4171-8c67-e86137d278dc"/>
    <add key="Genesys.AgentNotRespondingWrapUpCodeId" value="8fd25713-28f0-4171-8c67-e86137d278dc"/>
    <add key="Genesys.PreMergeTransferWrapUpCodeId" value="8fd25713-28f0-4171-8c67-e86137d278dc"/>
    <add key="Genesys.OfflinePresenceId" value="ccf3c10a-aa2c-4845-8e8d-f59fa48c58e5"/>
    <add key="Genesys.GroupClosedPresenceId" value="4b471fc1-66af-4ba8-92be-3169bd04af46"/>
    <add key="Genesys.DefaultTransferDnis" value="5517756785"/>
    <add key="Genesys.IgnorePhoneNumberList" value="*86"/>
    <add key="Genesys.DisclosureDnis" value="9495698120"/>

    <add key="Genesys.RestClientTimeout" value="00:00:15"/>
    <add key="Genesys.MaxRetryTime" value="00:00:15"/>
    <add key="Genesys.OutboundScheduleDataTableId" value="7d80e380-7b34-495a-9765-b63ddf806aa1"/>

    <add key="Genesys.NotificationReceiver.MinBackoff" value="00:00:02"/>
    <add key="Genesys.NotificationReceiver.MaxBackoff" value="00:00:30"/>
    <add key="Genesys.NotificationReceiver.RandomBackoffFactor" value="0.2"/>

    <add key="Genesys.Apim-Key" value="dc32b58bdde642eeb7fb1e5e6606d9f0"/>
    <add key="Genesys.Apim-BaseUrl" value="https://qa.gtcnnt.net/genesys/"/>

    <add key="Genesys.CacheTtl" value="00:15:00"/>
    <add key="Genesys.CacheTtl.CampaignOutboundSchedules" value="00:00:30" />

    <add key="DialerEventTopic.ConnectionString" value="Endpoint=sb://cignium-cuy-dev.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=VwXLI9pciu31fmKjx8fWrnM8kSH0pixY/zDxOaRYC+k=" />
    <add key="DialerEventTopic.Name" value="dialer-events-topic-reka" />

    <add key="Metrics.AppInsights.InstrumentationKey" value=""/>
    <add key="Metrics.AppInsights.FlushInterval" value="haha" />
    <add key="Tracing.Jaeger.Endpoint" value=""/>
    <add key="Tracing.Jaeger.MaxQueueSize" value="100"/>
    <add key="Tracing.Jaeger.FlushInterval" value="00:00:01"/>
    <add key="Tracing.Jaeger.Source" value="local"/>

    <add key="serilog:minimum-level" value="Information" />
    <add key="serilog:using:File" value="Serilog.Sinks.File" />
    <add key="serilog:write-to:File.path" value="%BASEDIR%\%LOGNAME%.log" />
    <add key="serilog:write-to:File.rollingInterval" value="Day" />
    <add key="serilog:write-to:File.outputTemplate" value="{Timestamp:u} | [{Level}] | {SourceContext} | {Message}{NewLine}{Exception}" />
    <add key="serilog:using:Console" value="Serilog.Sinks.Console" />
    <add key="serilog:write-to:Console" />
    <add key="serilog:using:Splunk" value="Serilog.Sinks.Splunk" />
    <add key="serilog:write-to:EventCollector" value="" />
    <add key="serilog:write-to:EventCollector.splunkHost" value="http://splunkapi.cignium.com:8088/services/collector" />
    <add key="serilog:write-to:EventCollector.queueLimit" value="100000" />
    <add key="serilog:write-to:EventCollector.eventCollectorToken" value="390f9f58-c143-4d4a-afe9-256924ecc5b1" />
    <add key="serilog:write-to:EventCollector.index" value="" />
    <add key="serilog:write-to:EventCollector.source" value="GenesysWorker.log" />
    <add key="serilog:write-to:EventCollector.sourceType" value="" />
    <add key="serilog:using:Sentry" value="Sentry.Serilog" />
    <add key="serilog:write-to:Sentry" value="" />
    <add key="serilog:write-to:Sentry.dsn" value="https://4398238f8ffd4d5b920a54ffe58830fe@sentry.io/1507372" />
    <add key="serilog:write-to:Sentry.minimumBreadcrumbLevel " value="Information" />
    <add key="serilog:write-to:Sentry.minimumEventLevel " value="Error" />
  </appSettings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7" />
  </startup>
  <akka>
    <hocon>
      <![CDATA[
        akka {
          log-config-on-start = on
          loglevel = DEBUG
          loggers = ["Akka.Logger.Serilog.SerilogLogger, Akka.Logger.Serilog"]
          extensions = ["Akka.Cluster.Tools.PublishSubscribe.DistributedPubSubExtensionProvider, Akka.Cluster.Tools"]

          actor {
            debug {
              receive = on
              autoreceive = on
              lifecycle = on
              unhandled = on
            }

            provider = cluster

            serializers {
              hyperion = "Akka.Serialization.HyperionSerializer, Akka.Serialization.Hyperion"
              akka-sharding = "Akka.Cluster.Sharding.Serialization.ClusterShardingMessageSerializer, Akka.Cluster.Sharding"
              akka-data-replication = "Akka.DistributedData.Serialization.ReplicatorMessageSerializer, Akka.DistributedData"
              akka-replicated-data = "Akka.DistributedData.Serialization.ReplicatedDataSerializer, Akka.DistributedData"
            }
            serialization-bindings {
              "System.Object" = hyperion
              "Akka.Cluster.Sharding.IClusterShardingSerializable, Akka.Cluster.Sharding" = akka-sharding
              "Akka.DistributedData.IReplicatorMessage, Akka.DistributedData" = akka-data-replication
              "Akka.DistributedData.IReplicatedDataSerialization, Akka.DistributedData" = akka-replicated-data                
            }
            serialization-identifiers {
              "Akka.DistributedData.Serialization.ReplicatedDataSerializer, Akka.DistributedData" = 11
              "Akka.DistributedData.Serialization.ReplicatorMessageSerializer, Akka.DistributedData" = 12
              "Akka.Cluster.Sharding.Serialization.ClusterShardingMessageSerializer, Akka.Cluster.Sharding" = 13
            }
          }

          remote {
            dot-netty.tcp {
              hostname = "0.0.0.0"
              port = 0
              enforce-ip-family = true
              dns-use-ipv6 = false
            }
          }

          cluster {
            log-info = off

            debug {
              verbose-receive-gossip-logging = off
            }

            downing-provider-class = "Akka.Cluster.SplitBrainResolver, Akka.Cluster"

            split-brain-resolver {
              active-strategy = "keep-majority"
              stable-after = 30s
              keep-majority.role = "lighthouse"
            }
            down-removal-margin = 30s

            sharding {
              rebalance-interval = 10000d
              passivate-idle-entity-after = off
            }

            roles = [ "sharded-node", "pubsub-node" ]
            seed-nodes = [ "akka.tcp://nobleclient@0.0.0.0:5000" ]
            singleton-proxy {
              singleton-name = "singleton"
              role = "listener"
              singleton-identification-interval = 1s
            }
            distributed-data {
              name = "ddataReplicator"
              role = "listener"
              serializer-cache-time-to-live = 10s
            }
            pub-sub {
              name = "distributedPubSubMediator"
              role = "pubsub-node"
            }
          }
        }
      ]]>
    </hocon>
  </akka>
</configuration>



